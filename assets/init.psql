-- postgresql
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS users (
	id INT NOT NULL PRIMARY KEY,
	created_at timestamptz NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS authors (
	user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
	created_at timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT unique_author UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS posts (
	id uuid NOT NULL PRIMARY KEY DEFAULT uuid_generate_v4 (),
	author_id INT NOT NULL REFERENCES authors (id) ON DELETE CASCADE,
	slug TEXT NOT NULL,
	title TEXT NOT NULL,
	body text NOT NULL,
	created_at timestamptz NOT NULL DEFAULT now(),
	updated_at timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT unique_slug UNIQUE (slug)
);

CREATE TABLE IF NOT EXISTS posts_likes (
	id uuid NOT NULL PRIMARY KEY DEFAULT uuid_generate_v4 (),
	user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
	post_id uuid NOT NULL REFERENCES posts (id) ON DELETE CASCADE,
	created_at timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT unique_like UNIQUE (user_id, post_id)
);

CREATE TABLE IF NOT EXISTS posts_comments (
	id uuid NOT NULL PRIMARY KEY DEFAULT uuid_generate_v4 (),
	user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
	post_id uuid NOT NULL REFERENCES posts (id) ON DELETE CASCADE,
	parent_id uuid REFERENCES posts_comments (id) ON DELETE CASCADE,
	body TEXT NOT NULL,
	created_at timestamptz NOT NULL DEFAULT now(),
	updated_at timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT unique_comment UNIQUE (user_id, post_id, parent_id)
);

CREATE TABLE IF NOT EXISTS post_comment_likes (
	id uuid NOT NULL PRIMARY KEY DEFAULT uuid_generate_v4 (),
	user_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
	comment_id uuid NOT NULL REFERENCES posts_comments (id) ON DELETE CASCADE,
	created_at timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT unique_comment_like UNIQUE (user_id, comment_id)
);
